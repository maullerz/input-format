{"version":3,"file":"dom.js","names":["isReadOnly","element","hasAttribute","getSelection","selectionStart","selectionEnd","start","end","Keys","Backspace","Delete","getOperation","event","keyCode","getCaretPosition","setCaretPosition","caret_position","undefined","isAndroid","setTimeout","setSelectionRange","navigator","ANDROID_USER_AGENT_REG_EXP","test","userAgent"],"sources":["../source/dom.js"],"sourcesContent":["export function isReadOnly(element)\n{\n\treturn element.hasAttribute('readonly')\n}\n\n// Gets <input/> selection bounds\nexport function getSelection(element)\n{\n\t// If no selection, return nothing\n\tif (element.selectionStart === element.selectionEnd)\n\t{\n\t\treturn\n\t}\n\n\treturn { start: element.selectionStart, end: element.selectionEnd }\n}\n\n// Key codes\nexport const Keys =\n{\n\tBackspace : 8,\n\tDelete    : 46\n}\n\n// Finds out the operation to be intercepted and performed\n// based on the key down event `keyCode`.\nexport function getOperation(event)\n{\n\tswitch (event.keyCode)\n\t{\n\t\tcase Keys.Backspace:\n\t\t\treturn 'Backspace'\n\n\t\tcase Keys.Delete:\n\t\t\treturn 'Delete'\n\t}\n}\n\n// Gets <input/> caret position\nexport function getCaretPosition(element)\n{\n\treturn element.selectionStart\n}\n\n// Sets <input/> caret position\nexport function setCaretPosition(element, caret_position)\n{\n\t// Sanity check\n\tif (caret_position === undefined)\n\t{\n\t\treturn\n\t}\n\n\t// Set caret position.\n\t// There has been an issue with caret positioning on Android devices.\n\t// https://github.com/catamphetamine/input-format/issues/2\n\t// I was revisiting this issue and looked for similar issues in other libraries.\n\t// For example, there's [`text-mask`](https://github.com/text-mask/text-mask) library.\n\t// They've had exactly the same issue when the caret seemingly refused to be repositioned programmatically.\n\t// The symptoms were the same: whenever the caret passed through a non-digit character of a mask (a whitespace, a bracket, a dash, etc), it looked as if it placed itself one character before its correct position.\n\t// https://github.com/text-mask/text-mask/issues/300\n\t// They seem to have found a basic fix for it: calling `input.setSelectionRange()` in a timeout rather than instantly for Android devices.\n\t// https://github.com/text-mask/text-mask/pull/400/files\n\t// I've implemented the same workaround here.\n\tif (isAndroid()) {\n      setTimeout(() => element.setSelectionRange(caret_position, caret_position), 0)\n\t} else {\n\t\telement.setSelectionRange(caret_position, caret_position)\n\t}\n}\n\nfunction isAndroid() {\n\t// `navigator` is not defined when running mocha tests.\n\tif (typeof navigator !== 'undefined') {\n\t\treturn ANDROID_USER_AGENT_REG_EXP.test(navigator.userAgent)\n\t}\n}\n\nconst ANDROID_USER_AGENT_REG_EXP = /Android/i"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,OAApB,EACP;EACC,OAAOA,OAAO,CAACC,YAAR,CAAqB,UAArB,CAAP;AACA,C,CAED;;AACA,OAAO,SAASC,YAAT,CAAsBF,OAAtB,EACP;EACC;EACA,IAAIA,OAAO,CAACG,cAAR,KAA2BH,OAAO,CAACI,YAAvC,EACA;IACC;EACA;;EAED,OAAO;IAAEC,KAAK,EAAEL,OAAO,CAACG,cAAjB;IAAiCG,GAAG,EAAEN,OAAO,CAACI;EAA9C,CAAP;AACA,C,CAED;;AACA,OAAO,MAAMG,IAAI,GACjB;EACCC,SAAS,EAAG,CADb;EAECC,MAAM,EAAM;AAFb,CADO,C,CAMP;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EACP;EACC,QAAQA,KAAK,CAACC,OAAd;IAEC,KAAKL,IAAI,CAACC,SAAV;MACC,OAAO,WAAP;;IAED,KAAKD,IAAI,CAACE,MAAV;MACC,OAAO,QAAP;EANF;AAQA,C,CAED;;AACA,OAAO,SAASI,gBAAT,CAA0Bb,OAA1B,EACP;EACC,OAAOA,OAAO,CAACG,cAAf;AACA,C,CAED;;AACA,OAAO,SAASW,gBAAT,CAA0Bd,OAA1B,EAAmCe,cAAnC,EACP;EACC;EACA,IAAIA,cAAc,KAAKC,SAAvB,EACA;IACC;EACA,CALF,CAOC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,IAAIC,SAAS,EAAb,EAAiB;IACZC,UAAU,CAAC,MAAMlB,OAAO,CAACmB,iBAAR,CAA0BJ,cAA1B,EAA0CA,cAA1C,CAAP,EAAkE,CAAlE,CAAV;EACJ,CAFD,MAEO;IACNf,OAAO,CAACmB,iBAAR,CAA0BJ,cAA1B,EAA0CA,cAA1C;EACA;AACD;;AAED,SAASE,SAAT,GAAqB;EACpB;EACA,IAAI,OAAOG,SAAP,KAAqB,WAAzB,EAAsC;IACrC,OAAOC,0BAA0B,CAACC,IAA3B,CAAgCF,SAAS,CAACG,SAA1C,CAAP;EACA;AACD;;AAED,MAAMF,0BAA0B,GAAG,UAAnC"}