{"version":3,"file":"helpers.js","names":["count_occurences","symbol","string","count","split","character"],"sources":["../source/helpers.js"],"sourcesContent":["// Counts all occurences of a symbol in a string\nexport function count_occurences(symbol, string) {\n\tlet count = 0\n\t// Using `.split('')` here instead of normal `for ... of`\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\n\t// (the ones consisting of four bytes)\n\t// but template placeholder characters don't fall into that range\n\t// so skipping such miscellaneous \"exotic\" characters\n\t// won't matter here for just counting placeholder character occurrences.\n\tfor (const character of string.split('')) {\n\t\tif (character === symbol) {\n\t\t\tcount++\n\t\t}\n\t}\n\treturn count\n}"],"mappings":";;;;;;;;;;;;;AAAA;AACO,SAASA,gBAAT,CAA0BC,MAA1B,EAAkCC,MAAlC,EAA0C;EAChD,IAAIC,KAAK,GAAG,CAAZ,CADgD,CAEhD;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,qDAAwBD,MAAM,CAACE,KAAP,CAAa,EAAb,CAAxB,wCAA0C;IAAA,MAA/BC,SAA+B;;IACzC,IAAIA,SAAS,KAAKJ,MAAlB,EAA0B;MACzBE,KAAK;IACL;EACD;;EACD,OAAOA,KAAP;AACA"}